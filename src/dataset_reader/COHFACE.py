import pandas as pd
import numpy as np
from ..common.import_tqdm import tqdm
import os
import re
import h5py
from typing import List, Tuple

class Protocol:
    CLEAN = {
        'train':[
            '25/0','25/1','29/0','29/1','31/0','31/1','35/0','35/1',
            '27/0','27/1','33/0','33/1','1/0','1/1','16/0','16/1',
            '38/0','38/1','21/0','21/1','28/0','28/1','4/0','4/1'
        ],
        'val'  :[
            '17/0','17/1','9/0','9/1','18/0','18/1','37/0','37/1',
            '2/0','2/1','7/0','7/1','39/0','39/1','24/0','24/1',
            '19/0','19/1','6/0','6/1','36/0','36/1','5/0','5/1'
        ],
        'test' :[
            '3/0','3/1','8/0','8/1','10/0','10/1','11/0','11/1',
            '12/0','12/1','13/0','13/1','14/0','14/1','15/0','15/1',
            '20/0','20/1','22/0','22/1','23/0','23/1','26/0','26/1',
            '30/0','30/1','32/0','32/1','34/0','34/1','40/0','40/1'
        ]
    }
    NATURAL = {
        'train':[
            '25/2','25/3','29/2','29/3','31/2','31/3','35/2','35/3',
            '27/2','27/3','33/2','33/3','1/2','1/3','16/2','16/3',
            '38/2','38/3','21/2','21/3','28/2','28/3','4/2','4/3'
        ],
        'val'  :[
            '17/2','17/3','9/2','9/3','18/2','18/3','37/2','37/3',
            '2/2','2/3','7/2','7/3','39/2','39/3','24/2','24/3','19/2',
            '19/3','6/2','6/3','36/2','36/3','5/2','5/3',
        ],
        'test' :[
            '3/2','3/3','8/2','8/3','10/2','10/3','11/2','11/3','12/2',
            '12/3','13/2','13/3','14/2','14/3','15/2','15/3','20/2',
            '20/3','22/2','22/3','23/2','23/3','26/2','26/3','30/2',
            '30/3','32/2','32/3','34/2','34/3','40/2','40/3',
        ]
    }
    ALL = {
        'train':[
            '25/0','25/1','25/2','25/3','29/0','29/1','29/2','29/3','31/0',
            '31/1','31/2','31/3','35/0','35/1','35/2','35/3','27/0','27/1','27/2',
            '27/3','33/0','33/1','33/2','33/3','1/0','1/1','1/2','1/3','16/0',
            '16/1','16/2','16/3','38/0','38/1','38/2','38/3','21/0','21/1',
            '21/2','21/3','28/0','28/1','28/2','28/3','4/0','4/1','4/2','4/3',
        ],
        'val':[
            '17/0','17/1','17/2','17/3','9/0','9/1','9/2','9/3','18/0','18/1',
            '18/2','18/3','37/0','37/1','37/2','37/3','2/0','2/1','2/2','2/3',
            '7/0','7/1','7/2','7/3','39/0','39/1','39/2','39/3','24/0','24/1',
            '24/2','24/3','19/0','19/1','19/2','19/3','6/0','6/1','6/2','6/3',
            '36/0','36/1','36/2','36/3','5/0','5/1','5/2','5/3',
        ],
        'test':[
            '3/0','3/1','3/2','3/3','8/0','8/1','8/2','8/3','10/0','10/1','10/2',
            '10/3','11/0','11/1','11/2','11/3','12/0','12/1','12/2','12/3','13/0',
            '13/1','13/2','13/3','14/0','14/1','14/2','14/3','15/0','15/1','15/2',
            '15/3','20/0','20/1','20/2','20/3','22/0','22/1','22/2','22/3','23/0',
            '23/1','23/2','23/3','26/0','26/1','26/2','26/3','30/0','30/1','30/2',
            '30/3','32/0','32/1','32/2','32/3','34/0','34/1','34/2','34/3','40/0',
            '40/1','40/2','40/3',

        ]
    }


class COHFACEDatasetReader():
    def print_root_path(self):
        print(f"Root Path:{self.dataset_path}\nStart Reading Dataset Directory...")
    def __init__(self,dataset_path,dataset_list=[]) -> None:
        self.dataset_path = os.path.expanduser(dataset_path)
        self.dataset_list = dataset_list
        pass
    def read(self,show_tqdm=True,print_start=True,print_end=True) -> Tuple[List[str],List[List[float]]]:
        list_of_video_path = []
        list_of_ppg_data = []
        self.print_root_path()
        progress_bar = tqdm(self.dataset_list, desc="Progress")
        for content_name in progress_bar:
            dirs = content_name.split('/')
            hdf5_data_path = os.path.join(self.dataset_path,dirs[0],dirs[1], f'data.hdf5')
            rgb_video_path = os.path.join(self.dataset_path,dirs[0],dirs[1], f'data.avi')
            if os.path.exists(rgb_video_path) and os.path.exists(hdf5_data_path):
                list_of_video_path.append(rgb_video_path)
                list_of_ppg_data.append( self.__ppg_reader(hdf5_data_path))
        progress_bar.clear()
        progress_bar.close()
        return list_of_video_path,list_of_ppg_data
    def __ppg_reader(self,hdf5_data_path):
        with h5py.File(hdf5_data_path, 'r') as file:
            # 查看文件中包含的数据集
            # print("文件结构：")
            # file.visit(print)
            # 读取一个数据集（假设路径为 'dataset_name'）
            ppg = np.array(file['pulse'][:])
            # print("数据集内容：", ppg.shape)
        return ppg
